<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on Bowser</title>
    <link>https://bowser1704.github.io/note/</link>
    <description>Recent content in notes on Bowser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>This work is licensed under a CC BY-NC 4.0(署名-非商业性使用 4.0 国际) License.</copyright>
    <lastBuildDate>Mon, 29 Jun 2020 10:18:22 +0800</lastBuildDate>
    
	<atom:link href="https://bowser1704.github.io/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iptables 的一些学习总结。</title>
      <link>https://bowser1704.github.io/note/20200629-iptables-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 29 Jun 2020 10:18:22 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200629-iptables-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>iptables 的一些学习笔记。 netfilter 有 几个hook，分别有不同的功能。 PREROUTING: Triggered by the NF_IP_PRE_ROUTING hook. INPUT: Triggered by the NF_IP_LOCAL_IN hook. FORWARD: Triggered by the NF_IP_FORWARD hook. OUTPUT: Triggered by the NF_IP_LOCAL_OUT hook. POSTROUTING: Triggered by the NF_IP_POST_ROUTING hook. Tables↓/Chain</description>
    </item>
    
    <item>
      <title>豆子峡谷黑苹果 5GHz WI-FI 无法使用 80 MHz</title>
      <link>https://bowser1704.github.io/note/20200627-%E8%B1%86%E5%AD%90%E5%B3%A1%E8%B0%B7%E9%BB%91%E8%8B%B9%E6%9E%9C-5ghz-wi-fi-%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8-80-mhz/</link>
      <pubDate>Sat, 27 Jun 2020 15:37:05 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200627-%E8%B1%86%E5%AD%90%E5%B3%A1%E8%B0%B7%E9%BB%91%E8%8B%B9%E6%9E%9C-5ghz-wi-fi-%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8-80-mhz/</guid>
      <description>nuc8i5bench hackintosh WIFI 跑不满速度 路由器：斐讯 K2 网卡：BCM94360CS K2 理论上 5GHz 速度应该可以达到 867 Mbps 但是这里只有 180 Mbps。网卡和路由器都是支持 802.11ac 的。 经过</description>
    </item>
    
    <item>
      <title>k8s vxlan 作为 cni 后端引发的 63 秒延迟</title>
      <link>https://bowser1704.github.io/note/20200627-k8s-vxlan-%E4%BD%9C%E4%B8%BA-cni-%E5%90%8E%E7%AB%AF%E5%BC%95%E5%8F%91%E7%9A%84-63-%E7%A7%92%E5%BB%B6%E8%BF%9F/</link>
      <pubDate>Sat, 27 Jun 2020 13:21:45 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200627-k8s-vxlan-%E4%BD%9C%E4%B8%BA-cni-%E5%90%8E%E7%AB%AF%E5%BC%95%E5%8F%91%E7%9A%84-63-%E7%A7%92%E5%BB%B6%E8%BF%9F/</guid>
      <description>vxlan as the flannel backend</description>
    </item>
    
    <item>
      <title>使用 coc.nvim</title>
      <link>https://bowser1704.github.io/note/20200626-%E4%BD%BF%E7%94%A8-coc.nvim/</link>
      <pubDate>Fri, 26 Jun 2020 11:12:15 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200626-%E4%BD%BF%E7%94%A8-coc.nvim/</guid>
      <description>“在 vim 中像 vscode 一样 使用 LSP &amp;quot;</description>
    </item>
    
    <item>
      <title>在 k3s 内使用 cert-manager 管理证书</title>
      <link>https://bowser1704.github.io/note/20200625-%E5%9C%A8-k3s-%E5%86%85%E4%BD%BF%E7%94%A8-cert-manager-%E7%AE%A1%E7%90%86%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Thu, 25 Jun 2020 19:30:20 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200625-%E5%9C%A8-k3s-%E5%86%85%E4%BD%BF%E7%94%A8-cert-manager-%E7%AE%A1%E7%90%86%E8%AF%81%E4%B9%A6/</guid>
      <description>“云原生使用 acme.sh 有一些无法很好解决的问题，所以使用 cert-manager 管理证书&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Helm in k3s</title>
      <link>https://bowser1704.github.io/note/20200625-helm-in-k3s/</link>
      <pubDate>Thu, 25 Jun 2020 10:11:19 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20200625-helm-in-k3s/</guid>
      <description>“国内环境在 k3s 内使用 Helm&amp;rdquo;</description>
    </item>
    
    <item>
      <title>return与exit的不同</title>
      <link>https://bowser1704.github.io/note/20191117-return%E4%B8%8Eexit%E7%9A%84%E4%B8%8D%E5%90%8C/</link>
      <pubDate>Sun, 17 Nov 2019 11:23:47 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191117-return%E4%B8%8Eexit%E7%9A%84%E4%B8%8D%E5%90%8C/</guid>
      <description>首先问题就是有时候我们返回用return，有时候是exit是什么区别呢？ 首先明确函数执行 我们直接运行某些脚本，或者是``sh x.sh`，这背</description>
    </item>
    
    <item>
      <title>csapp Chapter12 并发编程</title>
      <link>https://bowser1704.github.io/note/20191114-csapp-chapter12-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Thu, 14 Nov 2019 23:43:14 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191114-csapp-chapter12-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</guid>
      <description>基于进程的并发编程 就像我们最初写的echo服务一样，listen来了一个请求，创建一个connfd，一个子进程去处理，写入coonfd。如下</description>
    </item>
    
    <item>
      <title>csapp Chapter11 网络编程</title>
      <link>https://bowser1704.github.io/note/20191113-csapp-chapter11-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 13 Nov 2019 21:30:14 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191113-csapp-chapter11-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</guid>
      <description>主要记录一下socket相关内容，网络协议不多做描述。 下图是基本的步骤图 getaddrinfo 一句话：获取套接字地址，从url，也就是dns获取真正的ip地址，</description>
    </item>
    
    <item>
      <title>csapp Chapter10 UnixIO</title>
      <link>https://bowser1704.github.io/note/20191112-csapp-chapter10-unixio/</link>
      <pubDate>Tue, 12 Nov 2019 22:05:45 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191112-csapp-chapter10-unixio/</guid>
      <description>基本概念 首先要有一个思维，Linux 上面基本上所有外部设备都是文件，都是通过 IO 来读取，写入的，包括键盘，网络，终端&amp;hellip;.. P.S</description>
    </item>
    
    <item>
      <title>利用systemd管理nginx.service</title>
      <link>https://bowser1704.github.io/note/20191101-%E5%88%A9%E7%94%A8systemd%E7%AE%A1%E7%90%86nginx.service/</link>
      <pubDate>Fri, 01 Nov 2019 14:50:23 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191101-%E5%88%A9%E7%94%A8systemd%E7%AE%A1%E7%90%86nginx.service/</guid>
      <description>systemd是什么 以前的Linux系统启动，首先会启动一个init.d，然后其他所有的进程都是这个进程的子进程，但是现在的改进，启用sys</description>
    </item>
    
    <item>
      <title>短链接的实现</title>
      <link>https://bowser1704.github.io/note/20191031-%E7%9F%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 31 Oct 2019 23:57:33 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/note/20191031-%E7%9F%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>什么是短链接 就是你经常在手机短信，或者微博上看到的 URL，都是很短的并且像 t.cn 这种开头的，限制字数，短信发送按字数收费，微博限制回复长度等等。</description>
    </item>
    
  </channel>
</rss>