<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Bowser&#39;s Blog</title>
    <link>https://bowser1704.github.io/posts/</link>
    <description>Recent content in Posts on Bowser&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Aug 2019 16:23:18 +0800</lastBuildDate>
    
	<atom:link href="https://bowser1704.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>谈谈系统启动发生了什么</title>
      <link>https://bowser1704.github.io/posts/system-boot/</link>
      <pubDate>Thu, 22 Aug 2019 16:23:18 +0800</pubDate>
      
      <guid>https://bowser1704.github.io/posts/system-boot/</guid>
      <description>0. 杂谈 首先我们知道在系统中启动叫做boot，取自Bootstrap，这里有个小故事
 Bootstrap不是鞋带的意思，应该是“鞋子背带”的意思（http://en.wiktionary.org/wiki/bootstrap） 在这里隐喻表示一种不需要外部帮助自己能够处理事情的情形。“pull oneself up by one&amp;rsquo;s bootstraps”最初来自于《The Surprising Adventures of Baron Munchausen》这本书里的一个故事：主人公Baron Munchausen不小心掉进了一片沼泽，他通过自己的bootstraps将自己拉了出来（当然有童话神奇的色彩）。事实上在19世纪初美国就有&amp;rdquo;pull oneself over a fence by one&amp;rsquo;s bootstraps&amp;rdquo;的语言，意思是“做荒谬不可能完成的事情”。 参考：http://en.wikipedia.org/wiki/Bootstrapping
 为什么说这个故事呢，我们要启动系统，就要启动程序对吧，但是启动程序又要系统，这不就是一个死循环了吗？所以一种不需要外部帮助自己能够处理事情的情形，在当时ROM（Read only memory）的发展下，人们刚开始发明了BIOS（Basic Input/Output System），后来又出现了UEFI全称“统一的可扩展固件接口”(Unified Extensible Firmware Interface)。
1. 最开始是如何加载系统的 1.1 老一代的Legacy BIOS + MBR 最初的启动就是按下电源键之后，电脑读取写入ROM的BIOS。BIOS开始下面几个步骤。
 硬件自检（Power-On Self-Test）简称为 POST，如果有问题计算机会发出不同含义的蜂鸣声。（有没有很傻屌） 选择启动顺序，现在BIOS开始要运行的权利给下一个device了，但是你电脑可能有多个硬盘，也可能你会插入U盘，所以可能需要你选择一个设备。  计算机开始读取设备的第一个扇区，也就是512字节，就叫做&amp;rdquo;主引导记录&amp;rdquo;（Master boot record，缩写为MBR）。 但是MBR有一些问题，所以现在基本不用了。  从硬盘启动，加载系统内核相关的东西。  这里因为MBR，所以系统启动读取的是MBR内的启动程序，但是如果你一个硬盘，装了很多的系统，每次装新的系统，后面的启动代码就会覆盖前者的。   总结的话BIOS不认识设备，直接硬的来，你的MBR内写了什么，他就是什么。
1.2 进入Linux系统之后initd  加载内核，进入/boot下找到内核文件，加载。 开始运行初始化文件/sbin/init，他的作用是初始化系统环境，init就是第一个进程，pid=1 确定运行级别 加载开机启动程序 用户登录 进入login shell 打开 non-login shell  这里初略讲，详情看阮一峰的文章。</description>
    </item>
    
    <item>
      <title>Linux io</title>
      <link>https://bowser1704.github.io/posts/unixio/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bowser1704.github.io/posts/unixio/</guid>
      <description>&lt;p&gt;Linux文件描述符相关&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记录一次重装系统</title>
      <link>https://bowser1704.github.io/posts/ubuntuinstall/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bowser1704.github.io/posts/ubuntuinstall/</guid>
      <description>&lt;p&gt;作为一个手贱的人，总是乱动系统，这次重装系统有几点收获&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>